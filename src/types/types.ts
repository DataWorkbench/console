// generated by https://github.com/spike2044/yapi2js
// Fri, 17 Jun 2022 15:19:13 +0800
export type PbrequestDeleteDataSources =
  // ref: #/definitions/pbrequest.DeleteDataSources
  {
    source_ids: string[]
  }
export type PbmodelSyncJobConf =
  // ref: #/definitions/pbmodel.SyncJobConf
  {
    updated: number
    source_id: string
    target_id: string
    job_content: string
    job_mode: number
    cluster_id: string
    channel_control: PbmodelChannelControl
    cluster_info: PbmodelFlinkCluster
    sync_resource: PbmodelSyncResource
  }
export type PbresponseListDataSources =
  // ref: #/definitions/pbresponse.ListDataSources
  {
    infos: PbmodelDataSource[]
    total: number
    has_more: boolean
  }
export type PbrequestOfflineReleaseSyncJob =
  // ref: #/definitions/pbrequest.OfflineReleaseSyncJob
  {
    stop_running: boolean
  }
export type PbmodelDataSourceURL =
  // ref: #/definitions/pbmodel.DataSource_URL
  {
    s3: {}
    clickhouse: PbdatasourceClickHouseURL
    postgresql: PbdatasourcePostgreSQLURL
    hdfs: PbdatasourceHDFSURL
    oracle: PbdatasourceOracleURL
    redis: PbdatasourceRedisURL
    hive: PbdatasourceHiveURL
    mysql: PbdatasourceMySQLURL
    mongo_db: PbdatasourceMongoDbURL
    db2: PbdatasourceDB2URL
    sqlserver: PbdatasourceSqlServerURL
    ftp: PbdatasourceFtpURL
    hbase: PbdatasourceHBaseURL
    kafka: PbdatasourceKafkaURL
    sap_hana: PbdatasourceSapHanaURL
    elastic_search: PbdatasourceElasticSearchURL
  }
export type PbrequestCreateSyncJob =
  // ref: #/definitions/pbrequest.CreateSyncJob
  {
    name: string
    desc: string
    type: number
    is_directory: boolean
    target_type: number
    pid: string
    cluster_id: string
    source_type: number
  }
export type PbmodelQuotaSetSyncJob =
  // ref: #/definitions/pbmodel.QuotaSetSyncJob
  {
    limit: number
  }
export type PbresponseListNotifications =
  // ref: #/definitions/pbresponse.ListNotifications
  {
    notification_lists: PbmodelNotificationList[]
    total: number
  }
export type PbresponseListDataSourceConnections =
  // ref: #/definitions/pbresponse.ListDataSourceConnections
  {
    total: number
    infos: PbmodelDataSourceConnection[]
    has_more: boolean
  }
export type PbflinkJoinOperator =
  // ref: #/definitions/pbflink.JoinOperator
  {
    column: PbflinkColumnAs[]
    generate_column: PbflinkColumnAs[]
    table_as: string
    table_as_right: string
    join: string
    args: string
    expression: string
  }
export type PbrequestOfflineReleaseStreamJob =
  // ref: #/definitions/pbrequest.OfflineReleaseStreamJob
  {
    stop_running: boolean
  }
export type PbresponseListMembers =
  // ref: #/definitions/pbresponse.ListMembers
  {
    total: number
    infos: PbmodelMember[]
    has_more: boolean
  }
export type PbflinkOperatorProperty =
  // ref: #/definitions/pbflink.OperatorProperty
  {
    udttf: PbflinkUDTTFOperator
    order_by: PbflinkOrderByOperator
    fetch: PbflinkFetchOperator
    limit: PbflinkLimitOperator
    dest: PbflinkDestOperator
    udtf: PbflinkUDTFOperator
    union: PbflinkUnionOperator
    source: PbflinkSourceOperator
    values: PbflinkValuesOperator
    except: {}
    dimension: PbflinkDimensionOperator
    join: PbflinkJoinOperator
    const: PbflinkConstOperator
    filter: PbflinkFilterOperator
    group_by: PbflinkGroupByOperator
    intersect: {}
    offset: PbflinkOffsetOperator
    having: PbflinkHavingOperator
  }
export type PbsyncjobRedisTarget =
  // ref: #/definitions/pbsyncjob.RedisTarget
  {
    database: number
    mode: string
    type: number
    expire_time: number
    key_field_delimiter: string
    value_field_delimiter: string
    timeout: number
    keyIndexes: number[]
    date_format: string
  }
export type PbmodelQuotaSetFile =
  // ref: #/definitions/pbmodel.QuotaSetFile
  {
    limit: number
    size_total: number
    size: number
  }
export type PbrequestDeleteMembers =
  // ref: #/definitions/pbrequest.DeleteMembers
  {
    user_ids: string[]
  }
export type PbsyncjobMongodbSource =
  // ref: #/definitions/pbsyncjob.MongodbSource
  {
    collection_name: string
    column: PbsyncjobColumn[]
    fetch_size: number
    database: string
    filter: string
  }
export type PbresponseListApiVersions =
  // ref: #/definitions/pbresponse.ListApiVersions
  {
    infos: PbmodelApiVersion[]
    total: number
    has_more: boolean
  }
export type PbrequestConvertSyncJobMode =
  // ref: #/definitions/pbrequest.ConvertSyncJobMode
  {
    conf: PbmodelSyncJobConf
    job_id: string
  }
export type PbresponsePTaskDispatchCount =
  // ref: #/definitions/pbresponse.PTaskDispatchCount
  {
    infos: PbmodelDispatchTaskCountInfo[]
  }
export type PbmodelInstanceStatusStat =
  // ref: #/definitions/pbmodel.InstanceStatusStat
  {
    count: number
    state: number
  }
export type PbrequestCreateDataServiceCluster =
  // ref: #/definitions/pbrequest.CreateDataServiceCluster
  {
    name: string
    resource_spec: number
  }
export type PbresponseListSyncInstances =
  // ref: #/definitions/pbresponse.ListSyncInstances
  {
    total: number
    has_more: boolean
    infos: PbmodelSyncInstance[]
  }
export type PbmodelApiServiceEntity =
  // ref: #/definitions/pbmodel.ApiServiceEntity
  {
    curr_status: number
    user_id: string
    domain: string
    name: string
    auth_key_id: string
    space_id: string
    desc: string
    api_count: number
    create_time: number
    update_time: number
    id: string
    pre_path: string
  }
export type PbsyncjobHdfsTarget =
  // ref: #/definitions/pbsyncjob.HdfsTarget
  {
    file_type: number
    path: string
    encoding: number
    field_delimiter: string
    compress: number
    file_name: string
    column: PbsyncjobColumn[]
    write_mode: number
  }
export type ConfigPlatform =
  // ref: #/definitions/config.Platform
  {
    work_in_iaas: boolean
    enable_network: boolean
    documents_address: string
    allow_anonymous: boolean
  }
export type PbdatasourceHiveURL =
  // ref: #/definitions/pbdatasource.HiveURL
  {
    defaultFS: string
    host: string
    database: string
    port: number
    user: string
    password: string
    config: string
  }
export type PbmodelSyncJobRelease =
  // ref: #/definitions/pbmodel.SyncJobRelease
  {
    space_id: string
    updated: number
    sync_job: PbmodelSyncJob
    version: string
    sync_job_property: PbmodelSyncJobProperty
    created: number
    id: string
    name: string
    type: number
    desc: string
    created_by: string
    status: number
  }
export type PbmodelQuotaSetFlinkCluster =
  // ref: #/definitions/pbmodel.QuotaSetFlinkCluster
  {
    cu: unknown
    cu_total: unknown
    limit: number
  }
export type PbsyncjobKafkaSource =
  // ref: #/definitions/pbsyncjob.KafkaSource
  {
    encoding: string
    offset: string
    topic: string
    timestamp: number
    mode: string
    column: PbsyncjobColumn[]
    consumer_settings: PbsyncjobConsumerSettings
    codec: string
    group_id: string
  }
export type PbrequestTerminateSyncInstances =
  // ref: #/definitions/pbrequest.TerminateSyncInstances
  {
    instance_ids: string[]
  }
export type PbmodelAuthKeyEntity =
  // ref: #/definitions/pbmodel.AuthKeyEntity
  {
    user_id: string
    id: string
    name: string
    space_id: string
    secret_key: string
    curr_status: number
    update_time: number
    create_time: number
  }
export type PbdatasourceMongoDbURL =
  // ref: #/definitions/pbdatasource.MongoDbURL
  {
    database: string
    password: string
    user: string
    hosts: PbdatasourceHost[]
  }
export type PbdatasourceSapHanaURL =
  // ref: #/definitions/pbdatasource.SapHanaURL
  {
    host: string
    database: string
    user: string
    password: string
    port: number
  }
export type PbresponseListJobsByAlertPolicy =
  // ref: #/definitions/pbresponse.ListJobsByAlertPolicy
  {
    has_more: boolean
    total: number
    sync_jobs: PbmodelSyncJob[]
    stream_jobs: PbmodelStreamJob[]
  }
export type PbresponseListFileMetas =
  // ref: #/definitions/pbresponse.ListFileMetas
  {
    infos: PbmodelFile[]
    total: number
    has_more: boolean
  }
export type PbrequestReopenReleaseStreamJob =
  // ref: #/definitions/pbrequest.ReopenReleaseStreamJob
  {
    stop_running: boolean
  }
export type PbrequestUnbindAuthKey =
  // ref: #/definitions/pbrequest.UnbindAuthKey
  {
    api_service_ids: string[]
  }
export type PbmodelAlertPolicyMonitorStreamJob =
  // ref: #/definitions/pbmodel.AlertPolicy_MonitorStreamJob
  {
    instance_timeout: number
    instance_run_failed: boolean
    instance_run_timeout: boolean
  }
export type PbmodelNotificationListItem =
  // ref: #/definitions/pbmodel.NotificationList_Item
  {
    verified: number
    notification_item_id: string
    content: string
    create_time: string
    notification_item_type: string
  }
export type PbmodelProjectAPI =
  // ref: #/definitions/pbmodel.ProjectAPI
  {
    perm_type: number
    permissions: PbmodelProjectAPIPermission[]
    api_name: string
    display_name: string
  }
export type PbmodelApiRequestParams =
  // ref: #/definitions/pbmodel.ApiRequestParams
  {
    example_value: string
    default_value: string
    param_name: string
    param_operator: number
    param_description: string
    param_position: number
    api_id: string
    column_name: string
    is_required: boolean
    param_id: string
    data_type: number
    version_id: string
  }
export type PbresponseListWorkspaces =
  // ref: #/definitions/pbresponse.ListWorkspaces
  {
    has_more: boolean
    infos: PbmodelWorkspace[]
    total: number
  }
export type PbdatasourceHBaseURL =
  // ref: #/definitions/pbdatasource.HBaseURL
  {
    config: string
  }
export type PbmodelStreamInstance =
  // ref: #/definitions/pbmodel.StreamInstance
  {
    state: number
    created: number
    status: number
    job_id: string
    updated: number
    id: string
    version: string
    space_id: string
    message: string
  }
export type PbmodelDataSourceKind =
  // ref: #/definitions/pbmodel.DataSourceKind
  {
    name: string
  }
export type PbresponsePTaskRuntimeRanking =
  // ref: #/definitions/pbresponse.PTaskRuntimeRanking
  {
    infos: PbmodelInstanceRuntimeRankInfo[]
    total: number
  }
export type PbrequestDeleteSyncJobs =
  // ref: #/definitions/pbrequest.DeleteSyncJobs
  {
    job_ids: string[]
  }
export type PbrequestListNotifications =
  // ref: #/definitions/pbrequest.ListNotifications
  {
    limit: number
    offset: number
  }
export type PbsyncjobPgWalSource =
  // ref: #/definitions/pbsyncjob.PgWalSource
  {
    table_list: string[]
    slot_name: string
    status_interval: number
    temporary: boolean
    paving_data: boolean
    lsn: number
    allow_created: boolean
    database_name: string
    slot_available: boolean
  }
export type PbdatasourceFtpURL =
  // ref: #/definitions/pbdatasource.FtpURL
  {
    host: string
    private_key: string
    auth_mode: number
    user: string
    protocol: number
    port: number
    password: string
    connection_mode: number
  }
export type PbrequestReleaseSyncJob =
  // ref: #/definitions/pbrequest.ReleaseSyncJob
  {
    desc: string
    stop_running: boolean
  }
export type PbflinkValuesOperator =
  // ref: #/definitions/pbflink.ValuesOperator
  {
    rows: PbflinkValuesOperatorValuesType[]
  }
export type PbresponseListNetworks =
  // ref: #/definitions/pbresponse.ListNetworks
  {
    has_more: boolean
    total: number
    infos: PbmodelNetwork[]
  }
export type PbrequestListApiGroups =
  // ref: #/definitions/pbrequest.ListApiGroups
  {
    limit: number
    reverse: boolean
    offset: number
    sort_by: string
  }
export type PbmodelDispatchTaskCountInfo =
  // ref: #/definitions/pbmodel.DispatchTaskCountInfo
  {
    instance_id: number
    updated: number
    flow_count: number
  }
export type PbrequestDeleteAuthKey =
  // ref: #/definitions/pbrequest.DeleteAuthKey
  {
    id: string
  }
export type PbflinkFlinkPythonFile =
  // ref: #/definitions/pbflink.FlinkPythonFile
  {
    python_args: string
    python_module: string
    delete_file_id: string
    python_path: string
  }
export type PbmodelSyncJobScheduleParameter =
  // ref: #/definitions/pbmodel.SyncJobSchedule_Parameter
  {
    value: string
    key: string
  }
export type PbresponseCreateNetwork =
  // ref: #/definitions/pbresponse.CreateNetwork
  {
    id: string
  }
export type PbrequestCreateNetwork =
  // ref: #/definitions/pbrequest.CreateNetwork
  {
    vxnet_id: string
    name: string
    router_id: string
  }
export type PbflinkGroupByOperator =
  // ref: #/definitions/pbflink.GroupByOperator
  {
    group_by: string[]
  }
export type PbresponseDescribeResourceBinding =
  // ref: #/definitions/pbresponse.DescribeResourceBinding
  {
    infos: PbmodelBindingModuleSpec[]
  }
export type PbmodelWorkspace =
  // ref: #/definitions/pbmodel.Workspace
  {
    owner: string
    network_is_init: boolean
    status: number
    created: number
    id: string
    name: string
    desc: string
    updated: number
  }
export type PbmodelMemberQuota =
  // ref: #/definitions/pbmodel.MemberQuota
  {
    user_id: string
    quota_set: PbmodelQuotaSet
    space_id: string
  }
export type PbrequestBindAuthKey =
  // ref: #/definitions/pbrequest.BindAuthKey
  {
    api_service_ids: string[]
    auth_key_id: string
  }
export type PbrequestPingSyncJobConnection =
  // ref: #/definitions/pbrequest.PingSyncJobConnection
  {
    target_id: string
    source_id: string
    cluster_id: string
  }
export type PbrequestDisableDataSources =
  // ref: #/definitions/pbrequest.DisableDataSources
  {
    source_ids: string[]
  }
export type PbresponsePTasksStatusStat =
  // ref: #/definitions/pbresponse.PTasksStatusStat
  {
    infos: PbmodelInstanceStatusStat[]
  }
export type PbmodelSyncJobProperty =
  // ref: #/definitions/pbmodel.SyncJobProperty
  {
    conf: PbmodelSyncJobConf
    space_id: string
    version: string
    schedule: PbmodelSyncJobSchedule
    id: string
  }
export type PbmodelHostAliases =
  // ref: #/definitions/pbmodel.HostAliases
  {
    items: PbmodelHostAliasesItem[]
  }
export type PbrequestUpdateMember =
  // ref: #/definitions/pbrequest.UpdateMember
  {
    desc: string
    user_id: string
    system_role_ids: string[]
  }
export type PbresponseCreateDataSource =
  // ref: #/definitions/pbresponse.CreateDataSource
  {
    id: string
  }
export type PbresponseCreateWorkspace =
  // ref: #/definitions/pbresponse.CreateWorkspace
  {
    id: string
  }
export type PbresponseCreateApiGroup =
  // ref: #/definitions/pbresponse.CreateApiGroup
  {
    id: string
  }
export type PbresponseCreateApiConfig =
  // ref: #/definitions/pbresponse.CreateApiConfig
  {
    id: string
  }
export type PbrequestDeleteWorkspaces =
  // ref: #/definitions/pbrequest.DeleteWorkspaces
  {
    space_ids: string[]
  }
export type PbmodelFlinkCluster =
  // ref: #/definitions/pbmodel.FlinkCluster
  {
    job_cu: unknown
    id: string
    host_aliases: PbmodelHostAliases
    updated: number
    space_id: string
    network_id: string
    task_cu: unknown
    name: string
    status: number
    vxnet_id: string
    web_ui: string
    router_id: string
    task_num: number
    config: PbflinkFlinkConfig
    created_by: string
    created: number
    network_info: PbmodelNetwork
    version: string
  }
export type PbsyncjobStart =
  // ref: #/definitions/pbsyncjob.Start
  {
    timestamp: number
    position: number
    journal_name: string
  }
export type PbmodelSyncJob =
  // ref: #/definitions/pbmodel.SyncJob
  {
    target_type: number
    id: string
    sync_job_property: PbmodelSyncJobProperty
    space_id: string
    created: number
    status: number
    created_by: string
    is_directory: boolean
    updated: number
    pid: string
    desc: string
    source_type: number
    name: string
    version: string
    type: number
  }
export type PbrequestAlertPolicyBoundJobs =
  // ref: #/definitions/pbrequest.AlertPolicyBoundJobs
  {
    job_ids: string[]
  }
export type PbresponseListAlertPoliciesByJob =
  // ref: #/definitions/pbresponse.ListAlertPoliciesByJob
  {
    has_more: boolean
    infos: PbmodelAlertPolicy[]
    total: number
  }
export type PbmodelSyncJobConnection =
  // ref: #/definitions/pbmodel.SyncJobConnection
  {
    elapse: number
    cluster_id: string
    status: number
    target_id: string
    created: number
    source_id: string
    job_id: string
    space_id: string
    result: number
    message: string
  }
export type PbsyncjobHbaseSource =
  // ref: #/definitions/pbsyncjob.HbaseSource
  {
    scan_cache_size: number
    change_log: string
    start_row_key: string
    scan_batch_size: number
    table: string
    column: PbsyncjobColumn[]
    encoding: string
    end_row_key: string
    is_binary_rowkey: boolean
    hadoopConfig: string
    hbaseConfig: string
  }
export type PbmodelInstanceRuntimeRankInfo =
  // ref: #/definitions/pbmodel.InstanceRuntimeRankInfo
  {
    job_id: string
    version: string
    id: string
    running_time: number
  }
export type PbresponseDescribeDataSourceKinds =
  // ref: #/definitions/pbresponse.DescribeDataSourceKinds
  {
    kinds: PbmodelDataSourceKind[]
  }
export type PbresponseListOpAudits =
  // ref: #/definitions/pbresponse.ListOpAudits
  {
    infos: PbmodelOpAudit[]
    has_more: boolean
  }
export type PbrequestListDataServiceClusters =
  // ref: #/definitions/pbrequest.ListDataServiceClusters
  {
    offset: number
    limit: number
    reverse: boolean
    name: string
    sort_by: string
  }
export type PbsyncjobElasticSearchSource =
  // ref: #/definitions/pbsyncjob.ElasticSearchSource
  {
    index: string
    column: PbsyncjobColumn[]
    version: string
    batch_size: number
  }
export type PbflinkFlinkOperator =
  // ref: #/definitions/pbflink.FlinkOperator
  {
    point_x: number
    point_y: number
    property: PbflinkOperatorProperty
    upstream_right: string
    down_stream: string
    type: number
    name: string
    upstream: string
    id: string
  }
export type PbsyncjobMongodbTarget =
  // ref: #/definitions/pbsyncjob.MongodbTarget
  {
    flush_interval_mills: number
    batch_size: number
    column: PbsyncjobColumn[]
    database: string
    replace_key: string
    write_mode: number
    collection_name: string
  }
export type PbresponseConvertSyncJobMode =
  // ref: #/definitions/pbresponse.ConvertSyncJobMode
  {
    job: string
  }
export type PbflinkFlinkConfigLogger =
  // ref: #/definitions/pbflink.FlinkConfig_Logger
  {
    root_log_level: string
  }
export type PbflinkOffsetOperator =
  // ref: #/definitions/pbflink.OffsetOperator
  {
    offset: number
  }
export type PbdatasourceElasticSearchURL =
  // ref: #/definitions/pbdatasource.ElasticSearchURL
  {
    password: string
    version: string
    host: string
    user: string
    port: number
  }
export type PbrequestAttachVPCToWorkspace =
  // ref: #/definitions/pbrequest.AttachVPCToWorkspace
  {
    vxnet_id: string
    router_id: string
  }
export type PbmodelWorkspaceQuota =
  // ref: #/definitions/pbmodel.WorkspaceQuota
  {
    space_id: string
    quota_set: PbmodelQuotaSet
  }
export type PbrequestListAuthKeys =
  // ref: #/definitions/pbrequest.ListAuthKeys
  {
    space_id: string
    ids: string[]
    created_by: string
    curr_status: number
    offset: number
    sort_by: string
    limit: number
    reverse: boolean
  }
export type PbrequestCreateAlertPolicy =
  // ref: #/definitions/pbrequest.CreateAlertPolicy
  {
    trigger_action: number
    space_id: string
    name: string
    monitor_item: PbmodelAlertPolicyMonitorItem
    desc: string
    notification_ids: string[]
    trigger_rule: number
    job_ids: string[]
    monitor_object: number
  }
export type PbsyncjobHiveTarget =
  // ref: #/definitions/pbsyncjob.HiveTarget
  {
    encoding: number
    column: PbsyncjobHiveColumn[]
    partition_type: number
    partition: string
    table: string
    field_delimiter: string
    compress: number
    tables_column: string
    write_mode: number
    file_type: number
    use_partition: boolean
  }
export type PbrequestStopFlinkClusters =
  // ref: #/definitions/pbrequest.StopFlinkClusters
  {
    cluster_ids: string[]
  }
export type PbresponseListApiGroups =
  // ref: #/definitions/pbresponse.ListApiGroups
  {
    infos: PbmodelApiGroup[]
    has_more: boolean
    total: number
  }
export type PbrequestUpdateAuthKey =
  // ref: #/definitions/pbrequest.UpdateAuthKey
  {
    id: string
    name: string
  }
export type PbmodelSyncResource =
  // ref: #/definitions/pbmodel.SyncResource
  {
    hive_target: PbsyncjobHiveTarget
    mongodb_source: PbsyncjobMongodbSource
    binlog_source: PbsyncjobBinlogSource
    click_house_target: PbsyncjobDBTarget
    sap_hana_source: PbsyncjobDBSource
    postgresql_source: PbsyncjobDBSource
    mysql_source: PbsyncjobDBSource
    redis_target: PbsyncjobRedisTarget
    kafka_target: PbsyncjobKafkaTarget
    oracle_source: PbsyncjobDBSource
    pg_wal_source: PbsyncjobPgWalSource
    postgresql_target: PbsyncjobDBTarget
    kafka_source: PbsyncjobKafkaSource
    logminer_source: PbsyncjobLogMinerSource
    mysql_target: PbsyncjobDBTarget
    elastic_search_target: PbsyncjobElasticSearchTarget
    ftp_target: PbsyncjobFtpTarget
    click_house_source: PbsyncjobDBSource
    mongodb_target: PbsyncjobMongodbTarget
    ftp_source: PbsyncjobFtpSource
    oracle_target: PbsyncjobDBTarget
    hbase_target: PbsyncjobHbaseTarget
    sap_hana_target: PbsyncjobDBTarget
    hbase_source: PbsyncjobHbaseSource
    sqlserver_source: PbsyncjobDBSource
    sqlserver_target: PbsyncjobDBTarget
    hdfs_source: PbsyncjobHdfsSource
    sql_server_cdc_source: PbsyncjobSqlServerCdcSource
    elastic_search_source: PbsyncjobElasticSearchSource
    hdfs_target: PbsyncjobHdfsTarget
    db2_source: PbsyncjobDBSource
    db2_target: PbsyncjobDBTarget
  }
export type PbresponseListSyncJobs =
  // ref: #/definitions/pbresponse.ListSyncJobs
  {
    has_more: boolean
    total: number
    infos: PbmodelSyncJob[]
  }
export type PbflinkOrderByOperatorOrderByColumn =
  // ref: #/definitions/pbflink.OrderByOperator_OrderByColumn
  {
    field: string
    order: string
  }
export type PbmodelApiGroup =
  // ref: #/definitions/pbmodel.ApiGroup
  {
    name: string
    space_id: string
    id: string
    status: number
  }
export type PbsyncjobLogMinerSource =
  // ref: #/definitions/pbsyncjob.LogMinerSource
  {
    read_position: string
    query_timeout: number
    support_auto_add_log: boolean
    fetch_size: number
    start_scn: string
    paving_data: boolean
    split_update: boolean
    start_time: number
    table: string[]
    cat: string
  }
export type PbdatasourceDB2URL =
  // ref: #/definitions/pbdatasource.DB2URL
  {
    database: string
    password: string
    host: string
    port: number
    user: string
  }
export type PbresponseCreateAuthKey =
  // ref: #/definitions/pbresponse.CreateAuthKey
  {
    id: string
    secret_key: string
  }
export type PbrequestWizardResponseParameters =
  // ref: #/definitions/pbrequest.WizardResponseParameters
  {
    param_description: string
    param_name: string
    example_value: string
    data_type: number
    column_name: string
    default_value: string
  }
export type PbresponseListAlertPolicies =
  // ref: #/definitions/pbresponse.ListAlertPolicies
  {
    infos: PbmodelAlertPolicy[]
    has_more: boolean
    total: number
  }
export type PbrequestUpdateNetwork =
  // ref: #/definitions/pbrequest.UpdateNetwork
  {
    name: string
    router_id: string
    vxnet_id: string
  }
export type PbflinkFetchOperator =
  // ref: #/definitions/pbflink.FetchOperator
  {
    fetch: number
  }
export type PbrequestUpdateDataServiceCluster =
  // ref: #/definitions/pbrequest.UpdateDataServiceCluster
  {
    resource_spec: number
    name: string
  }
export type PbrequestCreateAuthKey =
  // ref: #/definitions/pbrequest.CreateAuthKey
  {
    space_id: string
    name: string
    created_by: string
  }
export type PbmodelStreamJob =
  // ref: #/definitions/pbmodel.StreamJob
  {
    updated: number
    status: number
    name: string
    space_id: string
    id: string
    desc: string
    is_directory: boolean
    pid: string
    type: number
    version: string
    created_by: string
    created: number
  }
export type PbflinkDestOperator =
  // ref: #/definitions/pbflink.DestOperator
  {
    columns: string[]
    table_id: string
  }
export type PbiaasVXNet =
  // ref: #/definitions/pbiaas.VXNet
  {
    router: PbiaasRouter
    vpc_router_id: string
    tunnel_type: string
    vxnet_id: string
    vxnet_name: string
    owner: string
    vxnet_type: number
  }
export type PbrequestAbolishDataServiceApis =
  // ref: #/definitions/pbrequest.AbolishDataServiceApis
  {
    api_ids: string[]
  }
export type PbmodelMember =
  // ref: #/definitions/pbmodel.Member
  {
    custom_role_ids: string
    status: number
    system_roles: PbmodelSystemRole[]
    created: number
    updated: number
    user_id: string
    user_info: PbmodelUser
    created_by: string
    desc: string
    system_role_ids: string
    space_id: string
  }
export type PbmodelStreamJobSchedule =
  // ref: #/definitions/pbmodel.StreamJobSchedule
  {
    started: number
    retry_limit: number
    timeout: number
    ended: number
    concurrency_policy: number
    retry_interval: number
    schedule_policy: number
    express: string
    executed: number
    period_type: string
    retry_policy: number
  }
export type PbiaasRouterVxnet =
  // ref: #/definitions/pbiaas.RouterVxnet
  {
    dyn_ip_end: string
    ipv6_network: string
    ip_network: string
    owner: string
    border_private_ip: string
    dyn_ipv6_end: string
    vpc_id: string
    dyn_ipv6_start: string
    dyn_ip_start: string
    vxnet_id: string
    mode: number
    vxnet_name: string
    router_id: string
    manager_ip: string
    border_id: string
  }
export type PbiaasEIP =
  // ref: #/definitions/pbiaas.EIP
  {
    eip_addr: string
    eip_name: string
    eip_id: string
  }
export type PbmodelAlertPolicyMonitorItem =
  // ref: #/definitions/pbmodel.AlertPolicy_MonitorItem
  {
    sync_job: PbmodelAlertPolicyMonitorSyncJob
    stream_job: PbmodelAlertPolicyMonitorStreamJob
  }
export type PbresponseDescribeFlinkUIByInstanceId =
  // ref: #/definitions/pbresponse.DescribeFlinkUIByInstanceId
  {
    web_ui: string
  }
export type PbresponsePingSyncJobConnection =
  // ref: #/definitions/pbresponse.PingSyncJobConnection
  {
    info: PbmodelSyncJobConnection
  }
export type PbflinkFlinkSQL =
  // ref: #/definitions/pbflink.FlinkSQL
  {
    code: string
  }
export type PbrequestSuspendReleaseStreamJob =
  // ref: #/definitions/pbrequest.SuspendReleaseStreamJob
  {
    stop_running: boolean
  }
export type PbresponseCreateAlertPolicy =
  // ref: #/definitions/pbresponse.CreateAlertPolicy
  {
    id: string
  }
export type PbrequestCreateApiGroup =
  // ref: #/definitions/pbrequest.CreateApiGroup
  {
    name: string
  }
export type PbresponseListReleaseSyncJobs =
  // ref: #/definitions/pbresponse.ListReleaseSyncJobs
  {
    infos: PbmodelSyncJobRelease[]
    has_more: boolean
    total: number
  }
export type PbflinkColumnAs =
  // ref: #/definitions/pbflink.ColumnAs
  {
    field: string
    type: string
    as: string
    func: string
  }
export type PbrequestCreateFlinkCluster =
  // ref: #/definitions/pbrequest.CreateFlinkCluster
  {
    network_id: string
    config: PbflinkFlinkConfig
    name: string
    task_num: number
    version: string
    task_cu: unknown
    job_cu: unknown
    host_aliases: PbmodelHostAliases
  }
export type PbresponseCreateDataServiceCluster =
  // ref: #/definitions/pbresponse.CreateDataServiceCluster
  {
    id: string
  }
export type PbresponseListAuthKeys =
  // ref: #/definitions/pbresponse.ListAuthKeys
  {
    total: number
    entities: PbmodelAuthKeyEntity[]
    has_more: boolean
  }
export type PbresponseListStreamJobs =
  // ref: #/definitions/pbresponse.ListStreamJobs
  {
    infos: PbmodelStreamJob[]
    has_more: boolean
    total: number
  }
export type PbsyncjobKafkaTarget =
  // ref: #/definitions/pbsyncjob.KafkaTarget
  {
    consumer_settings: PbsyncjobConsumerSettings
    tableFields: PbsyncjobColumn[]
    topic: string
  }
export type PbrequestEnableDataSources =
  // ref: #/definitions/pbrequest.EnableDataSources
  {
    source_ids: string[]
  }
export type PbresponseListApiServices =
  // ref: #/definitions/pbresponse.ListApiServices
  {
    total: number
    entities: PbmodelApiServiceEntity[]
    has_more: boolean
  }
export type PbflinkFlinkConfig =
  // ref: #/definitions/pbflink.FlinkConfig
  {
    logger: PbflinkFlinkConfigLogger
    custom: PbflinkFlinkConfigItem[]
    restart_strategy: PbflinkFlinkConfigRestartStrategy
  }
export type PbrequestReleaseStreamJob =
  // ref: #/definitions/pbrequest.ReleaseStreamJob
  {
    stop_running: boolean
    desc: string
  }
export type PbrequestCreateDataSource =
  // ref: #/definitions/pbrequest.CreateDataSource
  {
    name: string
    last_connection: PbmodelDataSourceConnection
    desc: string
    type: number
    url: PbmodelDataSourceURL
  }
export type PbrequestUpdateApiConfig =
  // ref: #/definitions/pbrequest.UpdateApiConfig
  {
    cluster_id: string
    datasource_id: string
    protocols: number[]
    request_method: number
    response_type: number
    table_name: string
    api_description: string
    timeout: number
    wizardDetails: PbrequestWizardDetails
    script: string
    group_id: string
    cross_domain: boolean
    api_path: string
    api_mode: number
    api_name: string
  }
export type PbmodelProjectAPIPermission =
  // ref: #/definitions/pbmodel.ProjectAPI_Permission
  {
    allowed: boolean
    system_role: PbmodelSystemRole
  }
export type PbdatasourceTableSchema =
  // ref: #/definitions/pbdatasource.TableSchema
  {
    columns: PbdatasourceTableColumn[]
  }
export type PbresponseListReleaseStreamJobs =
  // ref: #/definitions/pbresponse.ListReleaseStreamJobs
  {
    total: number
    infos: PbmodelStreamJobRelease[]
    has_more: boolean
  }
export type PbsyncjobBinlogSource =
  // ref: #/definitions/pbsyncjob.BinlogSource
  {
    split_update: boolean
    table: string[]
    filter: string
    cat: string
    connect_timeout: number
    start: PbsyncjobStart
    schema: string
    paving_data: boolean
    is_gtid_mode: boolean
    query_timeout: number
  }
export type PbmodelBindingModuleSpec =
  // ref: #/definitions/pbmodel.BindingModuleSpec
  {
    flink_cluster: PbmodelFlinkCluster[]
    stream_job: PbmodelStreamJob[]
    stream_job_release: PbmodelStreamJobRelease[]
    sync_job: PbmodelSyncJob[]
    sync_job_release: PbmodelSyncJobRelease[]
    id: string
  }
export type PbrequestListApiServices =
  // ref: #/definitions/pbrequest.ListApiServices
  {
    offset: number
    curr_status: number
    reverse: boolean
    sort_by: string
    limit: number
    created_by: string
    space_id: string
    auth_key_id: string
    ids: string[]
  }
export type PbmodelQuotaSetDataSource =
  // ref: #/definitions/pbmodel.QuotaSetDataSource
  {
    limit: number
  }
export type PbdatasourcePostgreSQLURL =
  // ref: #/definitions/pbdatasource.PostgreSQLURL
  {
    port: number
    password: string
    database: string
    host: string
    user: string
  }
export type PbsyncjobHbaseTarget =
  // ref: #/definitions/pbsyncjob.HbaseTarget
  {
    scan_batch_size: number
    null_mode: string
    table: string
    wal_flag: boolean
    change_log: string
    version_column_value: string
    hbase_config: string
    column: PbsyncjobColumn[]
    scan_cache_size: number
    version_column_index: number
    rowkey_express: string
    write_buffer_size: number
  }
export type PbmodelStreamJobCode =
  // ref: #/definitions/pbmodel.StreamJobCode
  {
    jar: PbflinkFlinkJar
    sql: PbflinkFlinkSQL
    python_file: PbflinkFlinkPythonFile
    operators: PbflinkFlinkOperator[]
    type: number
    python_code: PbflinkFlinkPythonCode
  }
export type PbdatasourceSqlServerURL =
  // ref: #/definitions/pbdatasource.SqlServerURL
  {
    user: string
    host: string
    password: string
    database: string
    port: number
  }
export type PbflinkUDTTFOperator =
  // ref: #/definitions/pbflink.UDTTFOperator
  {
    column: PbflinkColumnAs[]
    udf_id: string
    args: string
  }
export type PbrequestAddMembers =
  // ref: #/definitions/pbrequest.AddMembers
  {
    system_role_ids: string[]
    desc: string
    user_ids: string[]
  }
export type PbrequestUpdateFlinkCluster =
  // ref: #/definitions/pbrequest.UpdateFlinkCluster
  {
    network_id: string
    config: PbflinkFlinkConfig
    job_cu: unknown
    host_aliases: PbmodelHostAliases
    name: string
    task_cu: unknown
    task_num: number
  }
export type PbdatasourceRedisURL =
  // ref: #/definitions/pbdatasource.RedisURL
  {
    password: string
    hosts: PbdatasourceHost[]
  }
export type PbresponseTestCustomerApi =
  // ref: #/definitions/pbresponse.TestCustomerApi
  {
    response_content: string
    logs: string
  }
export type PbsyncjobDBSource =
  // ref: #/definitions/pbsyncjob.DBSource
  {
    column: PbsyncjobColumn[]
    schema: string
    condition_type: number
    express: string
    split_pk: string
    visualization: PbsyncjobCondition
    where: string
    table: string[]
    mapping_type: number
  }
export type PbrequestJobUnboundAlertPolicies =
  // ref: #/definitions/pbrequest.JobUnboundAlertPolicies
  {
    alert_ids: string[]
  }
export type PbmodelNetwork =
  // ref: #/definitions/pbmodel.Network
  {
    vxnet_id: string
    id: string
    router_id: string
    created_by: string
    created: number
    status: number
    name: string
    space_id: string
    updated: number
  }
export type PbmodelQuotaSetCustomRole =
  // ref: #/definitions/pbmodel.QuotaSetCustomRole
  {
    limit: number
  }
export type PbflinkSourceOperator =
  // ref: #/definitions/pbflink.SourceOperator
  {
    column: PbflinkColumnAs[]
    table_as: string
    table_id: string
    time_column: PbflinkColumnAs[]
    custom_column: PbflinkColumnAs[]
    distinct: string
  }
export type PbmodelQuotaSetMember =
  // ref: #/definitions/pbmodel.QuotaSetMember
  {
    limit: number
  }
export type PbmodelFile =
  // ref: #/definitions/pbmodel.File
  {
    created_by: string
    etag: string
    version: string
    updated: number
    status: number
    size: number
    id: string
    space_id: string
    name: string
    is_directory: boolean
    pid: string
    type: number
    created: number
    desc: string
  }
export type PbmodelSyncJobSchedule =
  // ref: #/definitions/pbmodel.SyncJobSchedule
  {
    concurrency_policy: number
    period_type: string
    schedule_policy: number
    ended: number
    started: number
    parameters: PbmodelSyncJobScheduleParameter[]
    executed: number
    express: string
    timeout: number
  }
export type PbrequestDeleteNetworks =
  // ref: #/definitions/pbrequest.DeleteNetworks
  {
    network_ids: string[]
  }
export type PbrequestListApiConfigs =
  // ref: #/definitions/pbrequest.ListApiConfigs
  {
    group_id: string
  }
export type PbrequestUpdateStreamJob =
  // ref: #/definitions/pbrequest.UpdateStreamJob
  {
    desc: string
    name: string
  }
export type PbresponseListStreamInstances =
  // ref: #/definitions/pbresponse.ListStreamInstances
  {
    has_more: boolean
    infos: PbmodelStreamInstance[]
    total: number
  }
export type PbresponseValidateFlinkJob =
  // ref: #/definitions/pbresponse.ValidateFlinkJob
  {
    message: string
    result: number
  }
export type PbrequestTerminateStreamInstances =
  // ref: #/definitions/pbrequest.TerminateStreamInstances
  {
    instance_ids: string[]
  }
export type PbmodelApiResponseParams =
  // ref: #/definitions/pbmodel.ApiResponseParams
  {
    default_value: string
    example_value: string
    column_name: string
    param_name: string
    param_id: string
    data_type: number
    param_description: string
    version_id: string
    api_id: string
  }
export type PbsyncjobElasticSearchTarget =
  // ref: #/definitions/pbsyncjob.ElasticSearchTarget
  {
    version: string
    index: string
    batch_size: number
    column: PbsyncjobColumn[]
    key_delimiter: string
  }
export type PbflinkFilterOperator =
  // ref: #/definitions/pbflink.FilterOperator
  {
    exists: string
    in: string
    expression: string
    where: string
  }
export type PbrequestUpdateFileMeta =
  // ref: #/definitions/pbrequest.UpdateFileMeta
  {
    desc: string
    name: string
  }
export type PbmodelApiVersion =
  // ref: #/definitions/pbmodel.ApiVersion
  {
    protocols: number[]
    version_id: string
    request_method: number
    response_type: number
    cluster_id: string
    api_path: string
    cross_domain: boolean
    datasource_id: string
    space_id: string
    api_description: string
    table_name: string
    api_name: string
    script: string
    updated: number
    created: number
    api_mode: number
    publish_status: number
    api_id: string
    timeout: number
    group_id: string
  }
export type PbmodelChannelControl =
  // ref: #/definitions/pbmodel.ChannelControl
  {
    rate: number
    parallelism: number
    bytes: number
    record_num: number
  }
export type PbresponseListSyncJobVersions =
  // ref: #/definitions/pbresponse.ListSyncJobVersions
  {
    has_more: boolean
    infos: PbmodelSyncJob[]
    total: number
  }
export type PbmodelDataServiceCluster =
  // ref: #/definitions/pbmodel.DataServiceCluster
  {
    id: string
    created_by: string
    status: number
    updated: number
    space_id: string
    name: string
    created: number
    resource_spec: number
  }
export type PbresponseDescribeDataSourceTables =
  // ref: #/definitions/pbresponse.DescribeDataSourceTables
  {
    items: string[]
  }
export type PbresponseListAvailableFlinkVersions =
  // ref: #/definitions/pbresponse.ListAvailableFlinkVersions
  {
    items: string[]
  }
export type PbiaasRouter =
  // ref: #/definitions/pbiaas.Router
  {
    base_vxnet: string
    status: string
    router_name: string
    eip: PbiaasEIP
    is_default: number
    router_id: string
    manager_ip: string
    ip_network: string
    router_type: number
    border_private_ip: string
    vpc_id: string
    vpc_network: string
    private_ip: string
    is_applied: number
    dyn_ip_end: string
    vpc_ipv6_network: string
    status_time: string
    owner: string
    dyn_ip_start: string
  }
export type PbresponseListStreamJobVersions =
  // ref: #/definitions/pbresponse.ListStreamJobVersions
  {
    total: number
    has_more: boolean
    infos: PbmodelStreamJob[]
  }
export type PbresponseDescribeDataSourceTableSchema =
  // ref: #/definitions/pbresponse.DescribeDataSourceTableSchema
  {
    schema: PbdatasourceTableSchema
  }
export type PbmodelInstanceErrorRankInfo =
  // ref: #/definitions/pbmodel.InstanceErrorRankInfo
  {
    error_count: number
    job_id: string
    version: string
  }
export type PbmodelQuotaSetUDF =
  // ref: #/definitions/pbmodel.QuotaSetUDF
  {
    limit: number
  }
export type PbsyncjobSqlServerCdcSource =
  // ref: #/definitions/pbsyncjob.SqlServerCdcSource
  {
    paving_data: boolean
    poll_interval: number
    cat: string
    table_list: string[]
    split_update: boolean
    lsn: string
    database_name: string
  }
export type PbflinkValuesOperatorValuesType =
  // ref: #/definitions/pbflink.ValuesOperator_ValuesType
  {
    values: string[]
  }
export type PbresponseListSystemRoles =
  // ref: #/definitions/pbresponse.ListSystemRoles
  {
    infos: PbmodelSystemRole[]
  }
export type PbsyncjobDBTarget =
  // ref: #/definitions/pbsyncjob.DBTarget
  {
    semantic: number
    update_key: string[]
    table: string[]
    column: PbsyncjobColumn[]
    with_no_lock: string
    batch_size: number
    pre_sql: string[]
    post_sql: string[]
    schema: string
    write_mode: number
  }
export type PbflinkOrderByOperator =
  // ref: #/definitions/pbflink.OrderByOperator
  {
    column: PbflinkOrderByOperatorOrderByColumn[]
  }
export type PbdatasourceMySQLURL =
  // ref: #/definitions/pbdatasource.MySQLURL
  {
    password: string
    port: number
    host: string
    database: string
    user: string
  }
export type PbrequestWizardDetails =
  // ref: #/definitions/pbrequest.WizardDetails
  {
    response_params: PbrequestWizardResponseParameters[]
    request_params: PbrequestWizardRequestParameters[]
  }
export type PbrequestAlertPolicyUnboundJobs =
  // ref: #/definitions/pbrequest.AlertPolicyUnboundJobs
  {
    job_ids: string[]
  }
export type PbflinkFlinkConfigRestartStrategy =
  // ref: #/definitions/pbflink.FlinkConfig_RestartStrategy
  {
    failure_rate_max_failures_per_interval: number
    failure_rate_delay: number
    restart_strategy: string
    failure_rate_failure_rate_interval: number
    fixed_delay_attempts: number
    fixed_delay_delay: number
  }
export type PbrequestStartFlinkClusters =
  // ref: #/definitions/pbrequest.StartFlinkClusters
  {
    cluster_ids: string[]
  }
export type PbrequestDeleteApiGroups =
  // ref: #/definitions/pbrequest.DeleteApiGroups
  {
    group_ids: string[]
  }
export type PbmodelRoute =
  // ref: #/definitions/pbmodel.Route
  {
    api_service_id: string
    space_id: string
    curr_status: number
    uri: string
    proxy_uri: string
    create_time: number
    id: string
    methods: string[]
    name: string
    upstream_id: string
    host: string
    update_time: number
    desc: string
    api_version_id: string
    remote_addrs: string[]
  }
export type PbdatasourceHDFSURL =
  // ref: #/definitions/pbdatasource.HDFSURL
  {
    config: string
    port: number
    name_node: string
  }
export type PbrequestCreateStreamJob =
  // ref: #/definitions/pbrequest.CreateStreamJob
  {
    pid: string
    type: number
    is_directory: boolean
    cluster_id: string
    desc: string
    name: string
  }
export type PbrequestDeleteStreamJobs =
  // ref: #/definitions/pbrequest.DeleteStreamJobs
  {
    job_ids: string[]
  }
export type PbmodelOpAudit =
  // ref: #/definitions/pbmodel.OpAudit
  {
    perm_type: number
    api_name: string
    user_id: string
    created: number
    state: number
    space_id: string
  }
export type PbresponseListIaaSRouters =
  // ref: #/definitions/pbresponse.ListIaaSRouters
  {
    infos: PbiaasRouter[]
    total: number
    has_more: boolean
  }
export type PbsyncjobFtpSource =
  // ref: #/definitions/pbsyncjob.FtpSource
  {
    timeout: string
    connect_pattern: string
    compress_type: string
    column: PbsyncjobColumn[]
    field_delimiter: string
    private_key_path: string
    file_config: string
    control_encoding: string
    path: string
    encoding: string
    file_type: string
    is_first_line_header: boolean
  }
export type PbresponseListIaaSRouterVXNets =
  // ref: #/definitions/pbresponse.ListIaaSRouterVXNets
  {
    total: number
    has_more: boolean
    infos: PbiaasRouterVxnet[]
  }
export type PbrequestReopenReleaseSyncJob =
  // ref: #/definitions/pbrequest.ReopenReleaseSyncJob
  {
    stop_running: boolean
  }
export type PbresponseDescribeNetworkConfig =
  // ref: #/definitions/pbresponse.DescribeNetworkConfig
  {
    vxnets: PbiaasVXNet[]
    router: PbiaasRouter
    default_vxnet_id: string
  }
export type PbrequestMoveStreamJobs =
  // ref: #/definitions/pbrequest.MoveStreamJobs
  {
    job_ids: string[]
    target: string
  }
export type PbrequestTestCustomerApi =
  // ref: #/definitions/pbrequest.TestCustomerApi
  {
    request_content: string
  }
export type PbresponseDescribeSyncConnection =
  // ref: #/definitions/pbresponse.DescribeSyncConnection
  {
    info: PbmodelSyncJobConnection
  }
export type PbflinkFlinkPythonCode =
  // ref: #/definitions/pbflink.FlinkPythonCode
  {
    code: string
  }
export type PbrequestJobBoundAlertPolicies =
  // ref: #/definitions/pbrequest.JobBoundAlertPolicies
  {
    alert_ids: string[]
  }
export type PbrequestUpdateWorkspace =
  // ref: #/definitions/pbrequest.UpdateWorkspace
  {
    name: string
    desc: string
  }
export type PbmodelHostAliasesItem =
  // ref: #/definitions/pbmodel.HostAliases_Item
  {
    ip: string
    hostname: string
  }
export type PbsyncjobHiveColumn =
  // ref: #/definitions/pbsyncjob.HiveColumn
  {
    key: string
    type: string
  }
export type PbrequestDeleteAlertPolicies =
  // ref: #/definitions/pbrequest.DeleteAlertPolicies
  {
    alert_ids: string[]
  }
export type PbdatasourceKafkaURL =
  // ref: #/definitions/pbdatasource.KafkaURL
  {
    kafka_brokers: PbdatasourceHost[]
  }
export type PbrequestDeleteDataServiceClusters =
  // ref: #/definitions/pbrequest.DeleteDataServiceClusters
  {
    cluster_ids: string[]
  }
export type PbsyncjobFtpTarget =
  // ref: #/definitions/pbsyncjob.FtpTarget
  {
    path: string
    control_encoding: string
    column: PbsyncjobColumn[]
    encoding: string
    ftp_file_name: string
    private_key_path: string
    is_first_line_header: boolean
    timeout: number
    field_delimiter: string
    connect_pattern: string
  }
export type PbrequestUpdateDataSource =
  // ref: #/definitions/pbrequest.UpdateDataSource
  {
    url: PbmodelDataSourceURL
    type: number
    desc: string
    name: string
  }
export type PbflinkHavingOperator =
  // ref: #/definitions/pbflink.HavingOperator
  {
    having: string
  }
export type PbflinkUnionOperator =
  // ref: #/definitions/pbflink.UnionOperator
  {
    all: boolean
  }
export type PbmodelQuotaSetWorkspace =
  // ref: #/definitions/pbmodel.QuotaSetWorkspace
  {
    limit: number
  }
export type PbmodelDataSource =
  // ref: #/definitions/pbmodel.DataSource
  {
    status: number
    space_id: string
    type: number
    created: number
    id: string
    created_by: string
    url: PbmodelDataSourceURL
    desc: string
    updated: number
    last_connection: PbmodelDataSourceConnection
    name: string
  }
export type PbdatasourceHost =
  // ref: #/definitions/pbdatasource.Host
  {
    port: number
    host: string
  }
export type PbrequestListApiVersions =
  // ref: #/definitions/pbrequest.ListApiVersions
  {
    sort_by: string
    limit: number
    offset: number
  }
export type PbrequestUpsertWorkspaceQuota =
  // ref: #/definitions/pbrequest.UpsertWorkspaceQuota
  {
    quota_set: PbmodelQuotaSet
  }
export type PbmodelNotificationList =
  // ref: #/definitions/pbmodel.NotificationList
  {
    create_time: string
    notification_list_name: string
    owner: string
    items: PbmodelNotificationListItem[]
    notification_list_id: string
  }
export type PbflinkDimensionOperator =
  // ref: #/definitions/pbflink.DimensionOperator
  {
    time_column: PbflinkColumnAs
    column: PbflinkColumnAs[]
    table_id: string
    table_as: string
    distinct: string
    custom_column: PbflinkColumnAs[]
  }
export type PbresponseListSystemRolePermissions =
  // ref: #/definitions/pbresponse.ListSystemRolePermissions
  {
    infos: PbmodelProjectModule[]
  }
export type PbmodelQuotaSetStreamJob =
  // ref: #/definitions/pbmodel.QuotaSetStreamJob
  {
    limit: number
  }
export type PbmodelProjectModule =
  // ref: #/definitions/pbmodel.ProjectModule
  {
    name: string
    classify: number
    id: string
    api_lists: PbmodelProjectAPI[]
  }
export type PbresponseListApiConfigs =
  // ref: #/definitions/pbresponse.ListApiConfigs
  {
    infos: PbmodelApiConfig[]
    total: number
    has_more: boolean
  }
export type PbmodelDataSourceConnection =
  // ref: #/definitions/pbmodel.DataSourceConnection
  {
    status: number
    created: number
    elapse: number
    network_id: string
    message: string
    result: number
    source_id: string
    network_info: PbmodelNetwork
    space_id: string
  }
export type PbrequestPingDataSourceConnection =
  // ref: #/definitions/pbrequest.PingDataSourceConnection
  {
    url: PbmodelDataSourceURL
    source_id: string
    stage: number
    network_id: string
    type: number
  }
export type PbresponsePTaskErrorRanking =
  // ref: #/definitions/pbresponse.PTaskErrorRanking
  {
    total: number
    infos: PbmodelInstanceErrorRankInfo[]
  }
export type PbsyncjobColumn =
  // ref: #/definitions/pbsyncjob.Column
  {
    name: string
    type: string
    format: string
    value: string
    is_part: boolean
    index: number
  }
export type PbrequestMoveSyncJobs =
  // ref: #/definitions/pbrequest.MoveSyncJobs
  {
    job_ids: string[]
    target: string
  }
export type PbmodelQuotaSet =
  // ref: #/definitions/pbmodel.QuotaSet
  {
    workspace: PbmodelQuotaSetWorkspace
    flink_cluster: PbmodelQuotaSetFlinkCluster
    member: PbmodelQuotaSetMember
    sync_job: PbmodelQuotaSetSyncJob
    network: PbmodelQuotaSetNetwork
    custom_role: PbmodelQuotaSetCustomRole
    udf: PbmodelQuotaSetUDF
    stream_job: PbmodelQuotaSetStreamJob
    data_source: PbmodelQuotaSetDataSource
    file: PbmodelQuotaSetFile
  }
export type PbmodelStreamJobArgs =
  // ref: #/definitions/pbmodel.StreamJobArgs
  {
    parallelism: number
    delete_cluster_id: string
    files: string[]
    py_archives: string[]
    py_files: string[]
    built_in_connectors: string[]
    cluster_id: string
    delete_files: string[]
    py_executable: string
    py_requirements: string[]
  }
export type PbflinkUDTFOperator =
  // ref: #/definitions/pbflink.UDTFOperator
  {
    select_column: PbflinkColumnAs[]
    column: PbflinkColumnAs[]
    args: string
    udf_id: string
    table_as: string
  }
export type PbflinkFlinkJar =
  // ref: #/definitions/pbflink.FlinkJar
  {
    delete_file_id: string
    jar_args: string
    file_id: string
    jar_entry: string
  }
export type PbrequestListRoutes =
  // ref: #/definitions/pbrequest.ListRoutes
  {
    curr_status: number
    uri: string
    api_version_id: string
    reverse: boolean
    sort_by: string
    api_service_id: string
    name: string
    offset: number
    ids: string[]
    space_id: string
    limit: number
  }
export type PbdatasourceTableColumn =
  // ref: #/definitions/pbdatasource.TableColumn
  {
    type: string
    name: string
    is_primary_key: boolean
  }
export type PbrequestSuspendReleaseSyncJob =
  // ref: #/definitions/pbrequest.SuspendReleaseSyncJob
  {
    stop_running: boolean
  }
export type PbresponseCreateFlinkCluster =
  // ref: #/definitions/pbresponse.CreateFlinkCluster
  {
    id: string
  }
export type PbrequestCreateApiConfig =
  // ref: #/definitions/pbrequest.CreateApiConfig
  {
    api_path: string
    response_type: number
    script: string
    group_id: string
    api_description: string
    datasource_id: string
    cluster_id: string
    cross_domain: boolean
    request_method: number
    api_mode: number
    api_name: string
    space_id: string
    timeout: number
    protocols: number[]
    wizardDetails: PbrequestWizardDetails
    table_name: string
  }
export type PbrequestEnableWorkspaces =
  // ref: #/definitions/pbrequest.EnableWorkspaces
  {
    resume_job: boolean
    space_ids: string[]
  }
export type PbrequestUpsertMemberQuota =
  // ref: #/definitions/pbrequest.UpsertMemberQuota
  {
    quota_set: PbmodelQuotaSet
  }
export type PbmodelQuotaSetNetwork =
  // ref: #/definitions/pbmodel.QuotaSetNetwork
  {
    limit: number
  }
export type PbmodelUser =
  // ref: #/definitions/pbmodel.User
  {
    gravatar_email: string
    lang: string
    privilege: number
    user_id: string
    currency: string
    email: string
    regions: string[]
    status: string
    user_name: string
    zones: string[]
    phone: string
    password: string
    role: string
  }
export type PbrequestDeleteApiConfigs =
  // ref: #/definitions/pbrequest.DeleteApiConfigs
  {
    api_ids: string[]
  }
export type PbrequestDeleteFileMetas =
  // ref: #/definitions/pbrequest.DeleteFileMetas
  {
    file_ids: string[]
  }
export type PbdatasourceClickHouseURL =
  // ref: #/definitions/pbdatasource.ClickHouseURL
  {
    password: string
    port: number
    user: string
    host: string
    database: string
  }
export type PbflinkLimitOperator =
  // ref: #/definitions/pbflink.LimitOperator
  {
    limit: number
  }
export type PbdatasourceOracleURL =
  // ref: #/definitions/pbdatasource.OracleURL
  {
    port: number
    database: string
    user: string
    password: string
    host: string
  }
export type PbresponseCreateFilePrepare =
  // ref: #/definitions/pbresponse.CreateFilePrepare
  {
    id: string
    version: string
  }
export type PbresponseListFlinkClusters =
  // ref: #/definitions/pbresponse.ListFlinkClusters
  {
    has_more: boolean
    total: number
    infos: PbmodelFlinkCluster[]
  }
export type PbresponsePTasksExecStat =
  // ref: #/definitions/pbresponse.PTasksExecStat
  {
    yesterday: PbmodelInstanceTaskExecStat[]
    today: PbmodelInstanceTaskExecStat[]
    history: PbmodelInstanceTaskExecStat[]
  }
export type PbrequestDisableWorkspaces =
  // ref: #/definitions/pbrequest.DisableWorkspaces
  {
    space_ids: string[]
  }
export type PbresponseListBuiltInConnectors =
  // ref: #/definitions/pbresponse.ListBuiltInConnectors
  {
    items: string[]
  }
export type PbmodelSyncInstance =
  // ref: #/definitions/pbmodel.SyncInstance
  {
    space_id: string
    flink_ui: string
    job_id: string
    state: number
    status: number
    id: string
    message: string
    sync_job: PbmodelSyncJob
    created: number
    updated: number
    sync_job_property: PbmodelSyncJobProperty
    version: string
  }
export type PbrequestCreateWorkspace =
  // ref: #/definitions/pbrequest.CreateWorkspace
  {
    router_id: string
    desc: string
    name: string
    vxnet_id: string
  }
export type PbresponseDescribeApiConfig =
  // ref: #/definitions/pbresponse.DescribeApiConfig
  {
    api_config: PbmodelApiConfig
    response_params: PbmodelApiResponseParams[]
    request_params: PbmodelApiRequestParams[]
  }
export type PbresponseListDataServiceClusters =
  // ref: #/definitions/pbresponse.ListDataServiceClusters
  {
    infos: PbmodelDataServiceCluster[]
    has_more: boolean
    total: number
  }
export type PbresponseListRoutes =
  // ref: #/definitions/pbresponse.ListRoutes
  {
    total: number
    has_more: boolean
    entities: PbmodelRoute[]
  }
export type PbrequestUpdateAlertPolicy =
  // ref: #/definitions/pbrequest.UpdateAlertPolicy
  {
    space_id: string
    monitor_item: PbmodelAlertPolicyMonitorItem
    job_ids: string[]
    trigger_action: number
    monitor_object: number
    notification_ids: string[]
    trigger_rule: number
    name: string
    desc: string
  }
export type PbflinkFlinkConfigItem =
  // ref: #/definitions/pbflink.FlinkConfig_Item
  {
    value: string
    key: string
  }
export type PbrequestUpdateSyncJob =
  // ref: #/definitions/pbrequest.UpdateSyncJob
  {
    name: string
    desc: string
  }
export type PbsyncjobConsumerSettings =
  // ref: #/definitions/pbsyncjob.ConsumerSettings
  {
    auto_commit_enable: string
  }
export type PbmodelStreamJobRelease =
  // ref: #/definitions/pbmodel.StreamJobRelease
  {
    version: string
    name: string
    space_id: string
    created: number
    desc: string
    type: number
    created_by: string
    status: number
    updated: number
    id: string
  }
export type PbmodelInstanceTaskExecStat =
  // ref: #/definitions/pbmodel.InstanceTaskExecStat
  {
    instance_count: number
    hour: number
  }
export type PbrequestWizardRequestParameters =
  // ref: #/definitions/pbrequest.WizardRequestParameters
  {
    column_name: string
    default_value: string
    data_type: number
    example_value: string
    is_required: boolean
    param_description: string
    param_name: string
    param_operator: number
    param_position: number
  }
export type PbsyncjobCondition =
  // ref: #/definitions/pbsyncjob.Condition
  {
    column: string
    end_condition: string
    start_value: string
    end_value: string
    start_condition: string
  }
export type PbresponseGenerateJobJson =
  // ref: #/definitions/pbresponse.GenerateJobJson
  {
    sync_job_script: string
  }
export type PbflinkConstOperator =
  // ref: #/definitions/pbflink.ConstOperator
  {
    column: PbflinkColumnAs[]
    table: string
  }
export type RequestListDataSourceConnections =
  // ref: #/definitions/request.ListDataSourceConnections
  {
    reverse: boolean
    offset: number
    sort_by: string
    limit: number
    verbose: number
  }
export type PbmodelAlertPolicy =
  // ref: #/definitions/pbmodel.AlertPolicy
  {
    trigger_rule: number
    updated: number
    id: string
    desc: string
    space_id: string
    trigger_action: number
    notification_ids: string
    monitor_object: number
    status: number
    monitor_item: PbmodelAlertPolicyMonitorItem
    name: string
    notification_lists: PbmodelNotificationList[]
    created_by: string
    created: number
  }
export type PbmodelApiConfig =
  // ref: #/definitions/pbmodel.ApiConfig
  {
    script: string
    group_id: string
    table_name: string
    datasource_id: string
    api_name: string
    response_type: number
    protocols: number[]
    cluster_id: string
    accessible_version: string
    api_id: string
    api_mode: number
    created: number
    request_method: number
    api_path: string
    created_by: string
    space_id: string
    timeout: number
    status: number
    api_description: string
    updated: number
    cross_domain: boolean
  }
export type PbmodelAlertPolicyMonitorSyncJob =
  // ref: #/definitions/pbmodel.AlertPolicy_MonitorSyncJob
  {
    instance_timeout: number
    instance_run_timeout: boolean
    instance_run_failed: boolean
  }
export type PbmodelSystemRole =
  // ref: #/definitions/pbmodel.SystemRole
  {
    name: string
    id: string
    type: number
  }
export type PbresponseListCustomerApis =
  // ref: #/definitions/pbresponse.ListCustomerApis
  {
    has_more: boolean
    infos: PbmodelApiConfig[]
    total: number
  }
export type PbsyncjobHdfsSource =
  // ref: #/definitions/pbsyncjob.HdfsSource
  {
    encoding: number
    field_delimiter: string
    file_type: number
    column: PbsyncjobColumn[]
    path: string
    filter_regex: string
  }
export type PbrequestDeleteFlinkClusters =
  // ref: #/definitions/pbrequest.DeleteFlinkClusters
  {
    cluster_ids: string[]
  }
